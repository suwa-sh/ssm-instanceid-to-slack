#!/bin/bash
#set -eux
#===================================================================================================
#
# Test
#
#===================================================================================================
#---------------------------------------------------------------------------------------------------
# env
#---------------------------------------------------------------------------------------------------
dir_script="$(dirname $0)"
cd "$(cd ${dir_script}; cd ..; pwd)" || exit 1

DIR_BASE="$(pwd)"
source "${DIR_BASE}/scripts/setenv"



#---------------------------------------------------------------------------------------------------
# check
#---------------------------------------------------------------------------------------------------
if [[ ! -f "${PATH_ENV}" ]]; then echo "${PATH_ENV} is not exists." >&2; exit 1; fi



#---------------------------------------------------------------------------------------------------
# util
#---------------------------------------------------------------------------------------------------
function private.export_env_def() {
  local _def="${1:?}"
  local _var="$(echo ${_def} | cut -d '=' -f 1)"
  local _value="$(echo ${_def} | cut -d '=' -f 2)"
  eval ${_var}=\'${_value}\'
  # shellcheck disable=SC2163
  export "${_var}"
}
function export_env_file() {
  local _file="${1:?}"
  if [[ ! -f "${_file}" ]]; then return 1; fi

  local _before_IFS="$IFS"
  IFS=$'\n'
  for _def in $(cat ${_file}); do
    private.export_env_def "${_def}"
  done
  IFS="${_before_IFS}"
}



#---------------------------------------------------------------------------------------------------
# test
#---------------------------------------------------------------------------------------------------
# check args
dir_exec="${1:?}"
if [[ ! -d "${dir_exec}" ]]; then echo "${dir_exec} is not exists." >&2; exit 1; fi

echo "-- test on ${dir_exec}" >&2
cd "${dir_exec}"
export_env_file "${PATH_ENV}"
python ./lambda_function.py >&2
exit $?
